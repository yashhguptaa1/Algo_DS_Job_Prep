When thinking of Recursive solution for DP questions
Think in Postorder manner
{ first recursive calls then work}
Why
because In dp we want to break main problem into small similar subproblems
FIRST SOLVE THESE SUBPROBLEMS { POSTORDER TRAVERSAL}


1) In PREORDER PHASE
    Check if you have already stored the answer
    As we go depthvise in recursive tree diagram ,
    if we see the same subtree again we must check if we have stored
    answer of that subtree before traversing it (preorder)

2) Recursive call Postorder manner

3) In PostOrder Phase
    Store answer to current subproblem


Dry run climbstairs recursive and goldmine recursive coin change permutation countbinarystrings rec

p1
fibonacci
climbstairs
countencodings

p2
targetsumsubset
01knapsack

p3
unboundedknapsack
coinchangecombination

two important points
agr question me min max he toh try to optimize through greedy
agr kbhi recursion me fasso, toh PRE,IN,POST me print lgado