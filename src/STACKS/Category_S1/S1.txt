Save all previous states in order where most recent state is at top and least recent state is at bottom
Now compare the current state to most recent state , if most recent state is not necessary POP(remove) it
and then go on to next recent state and keep on comparing current state to next to next recent till you achieve
desired result or there are no more previous states left to compare
Chances are on comparison you may obtain some answer which is generally stored in array


There is extension to this Seen in questions
where we store possiblities instead of state
Merge Overlapping
Celebrity Problem
SmallestNumberFollowing Pattern
ValidateSequenceStack

In these questions we do track previous states but when we perform
comparison
WE ELIMINATE THE PREVIOUS STATES

CONCLUSION
When doing stack questions
1) Think of WHAT,WHEN i can STORE(PUSH) in stack (as previously traversed states)
2) Think of condition to compare previous states(PEEK) to current state
3) If comparison satisfied (POP) from stack ,
   i) Think whether popped element can be part of final ans or it should be discarded

A] NGR types
    PUSH
    PEEK and compare
    POP and make part of ans
    PUSH

B] Evaluation Types
    PUSH in valueStack
    PUSH in operatorStack
    TWO {PEEK and COMPARE}
    POP to make ans
    Push intermediates